% Створити і форматувати тришарову мережу з двома входами для подальшого 
% навчання мережі методом зворотного поширення помилки, виконавши наступні 
% дії
net5 = network(2, 3, [1; 1; 1], [1 1; 1 1; 1 1], [0 0 0; 1 0 0; 0 1 0], [0 0 1]);

% Поставити діапазони вхідних сигналів і вагові матриці
net5.inputs{1}.range = [0 1];
net5.inputs{2}.range = [0 1];
net5.layers{1}.size = 1
net5.layers{2}.size = 1
net5.layers{3}.size = 1

% Налаштувати параметри мережі для ініціалізації за допомогою алгоритму 
% Нгуєна-Відроу для забезпечення можливості використання методу зворотного 
% поширення
net5.initFcn = 'initlay';
net5.layers{1}.initFcn = 'initnw';
net5.layers{2}.initFcn = 'initnw';
net5.layers{3}.initFcn = 'initnw';

% Проініціалізувати мережу для її подальшого навчання методом зворотного 
% поширення помилки
net5 = init(net5);
net5.IW{1, 1}       % – матриця ваг для 1-го входу;
net5.IW{1, 2}       % – матриця ваг для 2-го входу;
net5.LW{2, 1}       % – матриця ваг для 2-го шару;
net5.LW{3, 2}       % – матриця ваг для 3-го шару;
net5.b{1}           % – матриця зміщення для 1-го шару;
net5.b{2}           % – матриця зміщення для 2-го шару;
net5.b{3}           % – матриця зміщення для 3-го шару.

% Промоделювати мережу з початковими значеннями ваг і зміщень
P = [0.5 1; 1 0.5];     % – значення вхідних векторів;
Y = sim (net5)          % – моделювання мережі.

% Створити і ініціалізувати тришарову мережу з двома входами для подальшого 
% навчання різними методами, виконавши такі дії: 
% Створити шаблон мережі, скориставшись шаблоном net5
net6 = net5; % – створення нової копії мережі;
net6_original = net6
net6 = revert(net5); % – повернення до стандартних параметрів налаштування.

% Налаштувати параметри мережі з допомогою функції ініціалізації
% нульових значень ваг і зміщень initzero
net6.initFcn = 'initlay';
net6.layers{1}.initFcn = 'initnw'; 
net6.layers{2}.initFcn = 'initnw'; 
net6.layers{3}.initFcn = 'initnw'; 

net6.inputWeights{1 ,1}.initFcn = 'initzero';
net6.inputWeights{1 ,2}.initFcn = 'initzero';
net6.layerWeights{2 ,1}.initFcn = 'initzero';
net6.layerWeights{3 ,2}.initFcn = 'initzero';

net6.biases{1}.initFcn = 'initzero'; 
net6.biases{2}.initFcn = 'initzero';
net6.biases{3}.initFcn = 'initzero'; 

net6 = init(net6); % – ініціалізація мережі.

% Видати на екран матриці ваг і зміщення
net6.IW{1, 1} 
net6.IW{1, 2} 
net6.LW{2, 1} 
net6.LW{3, 2} 
net6.b{1} 
net6.b{2} 
net6.b{3}

% Промоделювати мережу і повернути її до початкових значень ваг і зміщень
net6 = sim(net6)
net6 = revert(net6_original)

view(net5)
view(net6)